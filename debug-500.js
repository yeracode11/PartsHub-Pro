// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
const { DataSource } = require('typeorm');

const dataSource = new DataSource({
  type: 'postgres',
  url: process.env.DATABASE_URL || 'postgresql://eracode:erasoft123@localhost:5432/autohubdb',
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : undefined,
  synchronize: false,
});

async function testConnection() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...');
    await dataSource.initialize();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü
    const tables = await dataSource.query(`
      SELECT tablename FROM pg_tables
      WHERE schemaname = 'public'
      AND tablename IN ('users', 'organizations', 'items', 'orders', 'customers')
    `);

    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', tables.map(t => t.tablename));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const users = await dataSource.query(`
      SELECT id, email, "firebaseUid", "organizationId", role, "isActive"
      FROM users
      WHERE email = 'ersul143@gmail.com'
    `);

    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', users[0] || '–Ω–µ –Ω–∞–π–¥–µ–Ω');

    if (users[0]) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
      const orgs = await dataSource.query(`
        SELECT id, name, "businessType", "isActive"
        FROM organizations
        WHERE id = $1
      `, [users[0].organizationId]);

      console.log('üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', orgs[0] || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    await dataSource.destroy();
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', error.message);
    console.error('üìã –î–µ—Ç–∞–ª–∏:', error);
  }
}

testConnection();

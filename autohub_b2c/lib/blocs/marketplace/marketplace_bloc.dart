import 'package:flutter_bloc/flutter_bloc.dart';
import '../../models/product_model.dart';
import '../../services/marketplace_api_service.dart';
import '../../services/api_client.dart';
import 'marketplace_event.dart';
import 'marketplace_state.dart';

// BLoC
class MarketplaceBloc extends Bloc<MarketplaceEvent, MarketplaceState> {
  final MarketplaceApiService _apiService;

  MarketplaceBloc({MarketplaceApiService? apiService})
      : _apiService = apiService ?? MarketplaceApiService(ApiClient()),
        super(MarketplaceInitial()) {
    on<MarketplaceLoadRequested>(_onLoadRequested);
    on<MarketplaceSearchRequested>(_onSearchRequested);
    on<MarketplaceCategoryFilterRequested>(_onCategoryFilterRequested);
  }

  void _onLoadRequested(
    MarketplaceLoadRequested event,
    Emitter<MarketplaceState> emit,
  ) async {
    if (!isClosed) emit(MarketplaceLoading());

    try {
      print('üõí MarketplaceBloc: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã...');
      final products = await _apiService.getProducts();
      print('üõí MarketplaceBloc: –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤');
      if (!isClosed) emit(MarketplaceLoaded(products));
    } catch (e) {
      print('‚ùå MarketplaceBloc: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: $e');
      if (!isClosed) emit(MarketplaceError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: $e'));
    }
  }

  void _onSearchRequested(
    MarketplaceSearchRequested event,
    Emitter<MarketplaceState> emit,
  ) async {
    if (!isClosed) emit(MarketplaceLoading());

    try {
      final products = await _apiService.searchProducts(event.query);
      if (!isClosed) emit(MarketplaceLoaded(products));
    } catch (e) {
      if (!isClosed) emit(MarketplaceError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: $e'));
    }
  }

  void _onCategoryFilterRequested(
    MarketplaceCategoryFilterRequested event,
    Emitter<MarketplaceState> emit,
  ) async {
    if (!isClosed) emit(MarketplaceLoading());

    try {
      final products = await _apiService.getProductsByCategory(event.category);
      if (!isClosed) emit(MarketplaceLoaded(products));
    } catch (e) {
      if (!isClosed) emit(MarketplaceError('–û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: $e'));
    }
  }

}
